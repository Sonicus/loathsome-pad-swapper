<Window x:Class="LoathsomePadSwapper.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LoathsomePadSwapper"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.DataContext>
        <local:PadSwapperViewModel />
    </Window.DataContext>
    <Grid ShowGridLines="False" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Label>GamePads connected:</Label>
        <ListView ItemsSource="{Binding Controllers}" Grid.Row="1">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <WrapPanel>
                        <TextBlock Text="Controller " />
                        <TextBlock Text="{Binding UserIndex}"/>
                        <TextBlock Text=", " />
                        <TextBlock Text="Connected: " />
                        <TextBlock Text="{Binding IsConnected}" FontWeight="Bold" />
                    </WrapPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Button x:Name="refreshPadsButton" Content="Refresh pads" HorizontalAlignment="Center" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Command="{Binding RefreshPadsCommand}" Height="35" Width="95"/>
        <Button x:Name="pad1Button" HorizontalAlignment="Stretch" Grid.Row="2" VerticalAlignment="Stretch" Margin="20" Command="{Binding AssignController1Command}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Content" Value="Click to assign Controller 1"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding AssignController1Command.IsRunning}" Value="true">
                            <Setter Property="Content" Value="Push A on pad to assign&#10;Click again to cancel"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="pad2Button" HorizontalAlignment="Stretch" Grid.Row="2" Grid.Column="1" VerticalAlignment="Stretch" Margin="20" Command="{Binding AssignController2Command}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Content" Value="Click to assign Controller 2"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding AssignController2Command.IsRunning}" Value="true">
                            <Setter Property="Content" Value="Push A on pad to assign&#10;Click again to cancel"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Label Content="{Binding Controller1.UserIndex, FallbackValue=None}" ContentStringFormat="Bound to gamepad: {0}" HorizontalAlignment="Center" Grid.Row="3" VerticalAlignment="Top"/>
        <Label Content="{Binding Controller2.UserIndex, FallbackValue=None}" ContentStringFormat="Bound to gamepad: {0}" HorizontalAlignment="Center" Grid.Row="3" Grid.Column="1" VerticalAlignment="Top"/>
        <Button x:Name="runVirtualPadButtons" HorizontalAlignment="Center" Grid.Row="4" Grid.ColumnSpan="2" VerticalAlignment="Center" Command="{Binding RunVirtualPadCommand}" Height="35" Width="113">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Content" Value="Start Pad Swapper"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSwapperRunning}" Value="true">
                            <Setter Property="Content" Value="Stop Pad Swapper"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>
